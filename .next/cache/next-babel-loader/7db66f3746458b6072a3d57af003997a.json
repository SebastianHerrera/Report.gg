{"ast":null,"code":"const BASE_URL = \"http://localhost:5050\";\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst randomNumber = (min = 0, max = 1) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst simulateNetworkLatency = (min = 30, max = 1500) => delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n  await simulateNetworkLatency();\n  options.headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  };\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n  return data;\n}\n\nconst api = {\n  summoner: {\n    general(summonerName) {\n      return callApi(\"/summoner?summoner=\".concat(summonerName));\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/beleno/Desktop/Proyectos/Personales/Reportgg/report/src/api.js"],"names":["BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","options","headers","Accept","url","response","fetch","data","json","api","summoner","general","summonerName"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB;;AAGA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AACA,MAAMI,YAAY,GAAG,CAACC,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KACnBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GADhD;;AAEA,MAAMK,sBAAsB,GAAG,CAACL,GAAG,GAAG,EAAP,EAAWC,GAAG,GAAG,IAAjB,KAC7BP,KAAK,CAACK,YAAY,CAACC,GAAD,EAAMC,GAAN,CAAb,CADP;;AAGA,eAAeK,OAAf,CAAuBC,QAAvB,EAAiCC,OAAO,GAAG,EAA3C,EAA+C;AAE3C,QAAMH,sBAAsB,EAA5B;AACAG,EAAAA,OAAO,CAACC,OAAR,GAAkB;AACd,oBAAgB,kBADF;AAEdC,IAAAA,MAAM,EAAE;AAFM,GAAlB;AAMA,QAAMC,GAAG,GAAGlB,QAAQ,GAAGc,QAAvB;AACA,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMH,OAAN,CAA5B;AACA,QAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACH;;AAGD,MAAME,GAAG,GAAG;AACRC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,CAACC,YAAD,EAAc;AACjB,aAAOb,OAAO,8BAAuBa,YAAvB,EAAd;AACH;;AAHI;AADD,CAAZ;AAQA,eAAeH,GAAf","sourcesContent":["const BASE_URL = \"http://localhost:5050\"\n\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst randomNumber = (min = 0, max = 1) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\n  delay(randomNumber(min, max));\n\nasync function callApi(endpoint, options = {}) {\n\n    await simulateNetworkLatency();\n    options.headers = {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      };\n\n\n    const url = BASE_URL + endpoint;\n    const response = await fetch(url, options);\n    const data = await response.json()\n\n    return data;\n}\n\n\nconst api = {\n    summoner:{\n        general(summonerName){\n            return callApi(`/summoner?summoner=${summonerName}`);\n        }\n    }\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}